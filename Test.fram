
import open Titanic/Test
import open Titanic/Engine
import open Titanic/Parser
import open Titanic/FormatterImplicit

let _ = printStrLn "start"

let style = "
(box 
  (layout:80 
    *(inter:ver 
      (inter:hor (flex:5) 'Dec' &(sep) (string:'Hex') (flex:5) &(string))
      (line)
      1(list:ver 
        (inter:hor (flex) 1(color:yellow (int)) &(sep) 1(int:x) &(string:''))
      )
    )
  )
)
"

let d = [1, 2, 3, 4, 5, 6]

let sty = runParser style.toList

let _ = match sty with
  | Left e => printStrLn ("Parse error " + e)
  | Right sty =>
    let _ = printStrLn sty.toString in

    match (List.formatted Int.formatted) d sty with
    | Left msg => printStrLn ("Style error " + msg)
    | Right doc => 
      (showDoc (debugDoc doc); showDoc doc)
    end
  end
