import open Titanic/Test
import open Titanic/Combinators
import open Titanic/Engine
import open Titanic/Types

let _ = Test.test ()

{#
(Layout 10 
  (*
    (Seq 
      (Seq 
        (Str def :: Fixed (3/0)) 
        (Flex 10 :: Fixed (0/10)
      ) :: Fixed (3/10)) 
      (Str xyz :: Fixed (3/0)
    ) :: Fixed (6/10)
  ) :: Fixed (6/10)
) :: Fixed (10/0))

#}

let exFmt = ppLayout 20 (ppReset (ppBox (ppFlex 1 <+> ppStr "def" <+> ppFlex 3 <+> ppStr "xyz")))

let _ = printStrLn exFmt.toString

let _ = showDoc exFmt

let exFmt2 = ppReset ((ppStr "asdasdasd" <+> ppShift (ppStr "=========")) /+/ (ppStr "asda" <+> ppShift (ppStr "==================")))

let _ = printStrLn exFmt2.toString

let _ = showDoc exFmt2
